server:
  port: 9000
  use-forward-headers: true
  undertow:
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
    io-threads: 4
    # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
    worker-threads: 20
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    buffer-size: 1024
    # 是否分配的直接内存
    direct-buffers: true

spring:
  profiles:
    active: dev
  application:
    name: zuul-server
  mvc:
    view:
      prefix: /templates/
    static-path-pattern: /static/**
    throw-exception-if-no-handler-found: true
  freemarker:
    suffix: .html

eureka:
  instance:
    # 服务续约间隔时间（缺省为30s）
    lease-renewal-interval-in-seconds: 5
    # 服务续约到期时间（缺省为90s）
    lease-expiration-duration-in-seconds: 10
    status-page-url: http://127.0.0.1:${server.port}/
  client:
    # 表示eureka client间隔多久拉取服务注册信息
    registry-fetch-interval-seconds: 5
    service-url:
      defaultZone: http://root:root@127.0.0.1:8000/eureka/

zuul:
  # zuul默认跳转规则：
  # http://localhost:6666/user/aa/bb ====> http://localhost:6666/aa/bb
  # true是不加前缀（默认），false就会添加到路径上
  strip-prefix: true
  # 忽略所有微服务或某些微服务，多个服务逗号分隔
  # 微服务的名字 ==> spring.application.name值
  ignored-services: "*"
  # 处理zuul丢失cookie，默认值是"Cookie", "Set-Cookie", "Authorization"
  sensitive-headers:
  host:
    connect-timeout-millis: 6000
    socket-timeout-millis: 6000
  routes:
    provider-user:
      path: /user/**
      serviceId: provider-user

ribbon:
  ReadTimeout: 60000
  ConnectTimeout: 3000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000

management:
  endpoints:
    web:
      exposure:
        include: "*"
        exclude: env
  endpoint:
    health:
      show-details: ALWAYS